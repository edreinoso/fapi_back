service: fapi

provider:
  name: aws
  runtime: python3.11
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:Scan
        - dynamodb:Query
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/${opt:stage}-fapi-players-ddb
        - arn:aws:dynamodb:${self:provider.region}:*:table/${opt:stage}-fapi-measurement-ddb

package:
  individually: true
  patterns:
    - '!data.json'
    - '!.serverlessignore'
    - '!.python-version'
    - '!serverless.yml'
    - '!pyproject.toml'
    - '!uv.lock'
    - '!README.md'
    - '!visualize_service.py'
    - '!functions/querier.py'
    - '!.venv'

layers:
  sharedLib:
    path: src
    compatibleRuntimes:
      - python3.11

functions:
  ingestPlayersData:
    handler: functions/ingerster.handler
    memorySize: 256
    timeout: 600
    package:
      patterns:
        - functions/ingerster.py
    layers:
      - { Ref: SharedLibLambdaLayer }

resources:
  Resources:
    MeasurementTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}-fapi-measurement-ddb
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    FapiTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}-fapi-players-ddb
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
